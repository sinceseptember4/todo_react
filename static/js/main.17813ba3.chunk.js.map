{"version":3,"sources":["components/InputTodo.jsx","components/IncompleteTodos.jsx","components/CompleteTodos.jsx","App.js","reportWebVitals.js","index.js"],"names":["InputTodo","props","todotext","onChange","onClick","className","placeholder","value","IncompleteTodos","todos","onClickComplete","onClickDelete","map","todo","index","CompleteTodos","onClickBack","App","useState","setTodoText","incompleteTodos","setIncompleteTodos","completeTodos","setCompleteTodos","event","target","newTodos","newIncompleteTodos","splice","newCompleteTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEaA,EAAY,SAACC,GACxB,IAAQC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,QAC5B,OACE,sBAAKC,UAAU,aAAf,UACE,uBAAOC,YAAY,yBAAUC,MAAOL,EAAUC,SAAUA,IACxD,wBAAQC,QAASA,EAAjB,8BCLOI,EAAkB,SAACP,GAC9B,IAAQQ,EAA0CR,EAA1CQ,MAAOC,EAAmCT,EAAnCS,gBAAiBC,EAAkBV,EAAlBU,cAChC,OACE,sBAAKN,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAb,0CACA,6BACGI,EAAMG,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAgBT,UAAU,WAA1B,UACE,6BAAKQ,IACL,wBAAQT,QAAS,kBAAMM,EAAgBI,IAAvC,0BACA,wBAAQV,QAAS,kBAAMO,EAAcG,IAArC,4BAHQD,YCRTE,EAAgB,SAACd,GAC5B,IAAQQ,EAAuBR,EAAvBQ,MAAOO,EAAgBf,EAAhBe,YACf,OACE,sBAAKX,UAAU,gBAAf,UACE,mBAAGA,UAAU,QAAb,oCACA,6BACGI,EAAMG,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAKT,UAAU,WAAf,UACE,6BAAKQ,IACL,wBAAQT,QAAS,kBAAMY,EAAYF,IAAnC,sCCNDG,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOhB,EAAP,KAAiBiB,EAAjB,KACA,EAA8CD,mBAAS,IAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KACA,EAA0CH,mBAAS,IAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KA+BA,OACE,gCACE,cAAC,EAAD,CACErB,SAAUA,EACVC,SAjCmB,SAACqB,GAAD,OAAWL,EAAYK,EAAMC,OAAOlB,QAkCvDH,QAhCa,WACjB,GAAiB,KAAbF,EAAJ,CACA,IAAMwB,EAAQ,sBAAON,GAAP,CAAwBlB,IACtCmB,EAAmBK,GACnBP,EAAY,QA8BV,cAAC,EAAD,CACEV,MAAOW,EACPV,gBAzBkB,SAACI,GACvB,IAAMa,EAAkB,YAAOP,GAC/BO,EAAmBC,OAAOd,EAAO,GAEjC,IAAMe,EAAgB,sBAAOP,GAAP,CAAsBF,EAAgBN,KAC5DO,EAAmBM,GACnBJ,EAAiBM,IAoBblB,cA/BgB,SAACG,GACrB,IAAMY,EAAQ,YAAON,GACrBM,EAASE,OAAOd,EAAO,GACvBO,EAAmBK,MA8BjB,cAAC,EAAD,CAAejB,MAAOa,EAAeN,YApBrB,SAACF,GACnB,IAAMe,EAAgB,YAAOP,GAC7BO,EAAiBD,OAAOd,EAAO,GAE/B,IAAMa,EAAkB,sBAAOP,GAAP,CAAwBE,EAAcR,KAC9DS,EAAiBM,GACjBR,EAAmBM,UC1BRG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17813ba3.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const InputTodo = (props) => {\n  const { todotext, onChange, onClick } = props;\n  return (\n    <div className=\"input-area\">\n      <input placeholder=\"TODOを入力\" value={todotext} onChange={onChange} />\n      <button onClick={onClick}>追加</button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const IncompleteTodos = (props) => {\n  const { todos, onClickComplete, onClickDelete } = props;\n  return (\n    <div className=\"imcomplete-area\">\n      <p className=\"title\">未完了のTODO</p>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            <div key={todo} className=\"list-row\">\n              <li>{todo}</li>\n              <button onClick={() => onClickComplete(index)}>完了</button>\n              <button onClick={() => onClickDelete(index)}>削除</button>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const CompleteTodos = (props) => {\n  const { todos, onClickBack } = props;\n  return (\n    <div className=\"complete-area\">\n      <p className=\"title\">完了のTODO</p>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            <div className=\"list-row\">\n              <li>{todo}</li>\n              <button onClick={() => onClickBack(index)}>戻す</button>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompleteTodos } from \"./components/IncompleteTodos\";\nimport { CompleteTodos } from \"./components/CompleteTodos\";\n\nexport const App = () => {\n  const [todotext, setTodoText] = useState(\"\");\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n  const [completeTodos, setCompleteTodos] = useState([]);\n\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n\n  const onClickadd = () => {\n    if (todotext === \"\") return;\n    const newTodos = [...incompleteTodos, todotext];\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  };\n  const onClickDelete = (index) => {\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n  };\n  const onClickComplete = (index) => {\n    const newIncompleteTodos = [...incompleteTodos];\n    newIncompleteTodos.splice(index, 1);\n\n    const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\n    setIncompleteTodos(newIncompleteTodos);\n    setCompleteTodos(newCompleteTodos);\n  };\n  const onClickBack = (index) => {\n    const newCompleteTodos = [...completeTodos];\n    newCompleteTodos.splice(index, 1);\n\n    const newIncompleteTodos = [...incompleteTodos, completeTodos[index]];\n    setCompleteTodos(newCompleteTodos);\n    setIncompleteTodos(newIncompleteTodos);\n  };\n  return (\n    <div>\n      <InputTodo\n        todotext={todotext}\n        onChange={onChangeTodoText}\n        onClick={onClickadd}\n      />\n      <IncompleteTodos\n        todos={incompleteTodos}\n        onClickComplete={onClickComplete}\n        onClickDelete={onClickDelete}\n      />\n      <CompleteTodos todos={completeTodos} onClickBack={onClickBack} />\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}